{"$message_type":"diagnostic","message":"no method named `add_workspace_change_handler` found for enum `Result` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":574,"byte_end":602,"line_start":16,"line_end":16,"column_start":20,"column_end":48,"is_primary":true,"text":[{"text":"    event_listener.add_workspace_change_handler(|id, _| println!(\"workspace changed to {id:#?}\"));","highlight_start":20,"highlight_end":48}],"label":"method not found in `Result<EventListenerMutable, HyprError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `add_workspace_change_handler` exists on the type `EventListenerMutable`","code":null,"level":"note","spans":[{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/macros.rs","byte_start":6027,"byte_end":6106,"line_start":143,"line_end":143,"column_start":17,"column_end":96,"is_primary":true,"text":[{"text":"                pub fn [<add_ $name _handler>](&mut self, f: impl Fn($f, &mut State) + 'static) {","highlight_start":17,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/macros.rs","byte_start":514,"byte_end":560,"line_start":21,"line_end":21,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        mut_add_listener!($name $end,$f,$c,$c2 => $id);","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/mod.rs","byte_start":472,"byte_end":573,"line_start":22,"line_end":22,"column_start":1,"column_end":102,"is_primary":false,"text":[{"text":"add_listener!(workspace_change d, WorkspaceType, \"on workspace change\", \"changed workspace to\" => id);","highlight_start":1,"highlight_end":102}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"add_listener!","def_site_span":{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/macros.rs","byte_start":346,"byte_end":371,"line_start":18,"line_end":18,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! add_listener {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"mut_add_listener!","def_site_span":{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/macros.rs","byte_start":5483,"byte_end":5512,"line_start":133,"line_end":133,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! mut_add_listener {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"use the `?` operator to extract the `EventListenerMutable` value, propagating a `Result::Err` value to the caller","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":573,"byte_end":573,"line_start":16,"line_end":16,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    event_listener.add_workspace_change_handler(|id, _| println!(\"workspace changed to {id:#?}\"));","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"?","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `add_workspace_change_handler` found for enum `Result` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:16:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    event_listener.add_workspace_change_handler(|id, _| println!(\"workspace changed to {\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Result<EventListenerMutable, HyprError>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `add_workspace_change_handler` exists on the type `EventListenerMutable`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/mod.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0madd_listener!(workspace_change d, WorkspaceType, \"on workspace change\", \"changed workspace to\" => i\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `mut_add_listener` which comes from the expansion of the macro `add_listener` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use the `?` operator to extract the `EventListenerMutable` value, propagating a `Result::Err` value to the caller\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    event_listener\u001b[0m\u001b[0m\u001b[38;5;10m?\u001b[0m\u001b[0m.add_workspace_change_handler(|id, _| println!(\"workspace changed to {id:#?}\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `start_listener` found for enum `Result` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":792,"byte_end":806,"line_start":21,"line_end":21,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"    event_listener.start_listener()","highlight_start":20,"highlight_end":34}],"label":"method not found in `Result<EventListenerMutable, HyprError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `start_listener` exists on the type `EventListenerMutable`","code":null,"level":"note","spans":[{"file_name":"/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/mutable.rs","byte_start":10531,"byte_end":10583,"line_start":255,"line_end":255,"column_start":5,"column_end":57,"is_primary":true,"text":[{"text":"    pub fn start_listener(mut self) -> crate::Result<()> {","highlight_start":5,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use the `?` operator to extract the `EventListenerMutable` value, propagating a `Result::Err` value to the caller","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":791,"byte_end":791,"line_start":21,"line_end":21,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    event_listener.start_listener()","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"?","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `start_listener` found for enum `Result` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    event_listener.start_listener()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Result<EventListenerMutable, HyprError>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `start_listener` exists on the type `EventListenerMutable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chrysanthemum/.cargo/git/checkouts/hyprland-rs-ce7ad3b93f8820bb/799de0d/src/event_listener/mutable.rs:255:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn start_listener(mut self) -> crate::Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use the `?` operator to extract the `EventListenerMutable` value, propagating a `Result::Err` value to the caller\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    event_listener\u001b[0m\u001b[0m\u001b[38;5;10m?\u001b[0m\u001b[0m.start_listener()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}
